version: '3.8'

services:
  # Servicio de Base de Datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: timepieces_db
    environment:
      POSTGRES_DB: watchesdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432" # Opcional: para acceso local con un cliente DB

  # Servicio de Backend (Django REST API)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: timepieces_backend
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://user:password@db:5432/watchesdb
    depends_on:
      - db
    
    #
    # COMANDO SIMPLIFICADO A UNA SOLA LÍNEA (AQUÍ ESTÁ EL ARREGLO)
    #
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
  # Servicio de Frontend (Next.js/React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: timepieces_frontend
    volumes:
      - ./frontend:/app # Montar volumen para desarrollo
      - /app/node_modules # Evita conflictos de sistema operativo al montar node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data: